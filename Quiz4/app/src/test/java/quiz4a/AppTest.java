/*
 * This source file was generated by the Gradle 'init' task
 */
package quiz4a;

import org.junit.jupiter.api.Test;
import static org.junit.jupiter.api.Assertions.*;


class AppTets {
    //ตัวอย่าง 1 ให้สร้าง Employee Employee(1, "John Doe", 50000) และตรวจสอบว่าเงินเดือน เป็น 50000
    @Test void createEmployee() } import static org.junit.jupiter.api.Assertions.assertEquals;
    import org.junit.jupiter.api.Test; 
    
    class EmployeeTest {
    
        @Test
        void createEmployee() {
            // สร้าง Employee ใหม่ที่มี ID=1, ชื่อ "John Doe", เงินเดือน 50000
            Employee employee = new Employee(1, "John Doe", 50000);
            
            // ตรวจสอบว่าเงินเดือนของ employee เป็น 50000 หรือไม่
            assertEquals(50000, employee.getSalary());
        }
    }
    
    class Employee {
        private int id;
        private String name;
        private double salary;
    }
        // Constructor
        public Employee(int id, String name, double salary) {
            this.id = id;
            this.name = name;
            this.salary = salary;
        }
    //**
        // Getter สำหรับเงินเดือน
        public double getSalary() {
            return salary;
        }
    
        // เพิ่ม getter และ setter สำหรับ id และ name ถ้าจำเป็น
    
    


    //ข้อ 2 ตรวจสอบว่า Salary ตั้งให้ติดลบไม่ได้
    @Test void SalaryCannotBeNegative() {
    //**
        // ทดสอบว่าเมื่อกำหนดเงินเดือนติดลบจะเกิด exception หรือไม่
            assertThrows(IllegalArgumentException.class, () -> {
                new Employee(1, "John Doe", -50000); // จะต้องเกิด IllegalArgumentException
            });
        }

    //ข้อ 3 ตรวจสอบว่า Bonus เป็น 20% ของ เงินเดือน(Salary)
    
    //ต้องมีการแก้ไข code ใน Manager.java ให้ถูกต้อง
    @Test void Bonus20() 
    public class Manager {
        private double salary;
    
        public Manager(double salary) {
            this.salary = salary;
        }
    
        // Method to calculate bonus (20% of the salary)
        public double calculateBonus() {
            return salary * 0.20; // 20% of the salary
        }
    
        // Getter for salary
        public double getSalary() {
            return salary;
        }
    }
    

    
    
    
    
